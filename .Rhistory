2385-294
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
View(MLST_results)
library(reshape2)
library(Reshape2)
library("reshape2")
library("reshape")
install.packages("reshape2")
library("reshape2", lib.loc="~/Dropbox/0 - Publications_bh/Shiny/MIST_Work/packrat/lib/x86_64-apple-darwin13.1.0/3.1.1")
MLST <- melt(MLST_results)
View(MLST)
View(MLST_results)
View(MLST)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST)
MLST <- acast(MLST)
View(MLST)
MLST <- dcast(MLST, Strain ~ Marker ~ Call)
MLST <- dcast(MLST, Strain ~ Marker)
View(MLST)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain ~ Call)
View(MLST)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain ~ Test)
View(MLST)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain + Marker ~ Call)
View(MLST)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain + Call ~ Marker)
View(MLST)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain ~ Marker)
View(MLST)
MLST <- dcast(MLST, Strain ~ Marker, value.var = Call)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain ~ Marker, value.var = Call)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain ~ Marker, fill = Call)
View(MLST_results)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain ~ Marker, Call)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
View(MLST)
View(MLST_results)
MLST <- melt(MLST_results)
MLST <- as.data.frame(MLST)
MLST <- MLST[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
View(MLST_results)
View(MLST)
View(MLST_results)
MLST <- dcast(MLST_results, Strain ~ Marker)
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- dcast(MLST_results, Strain ~ Marker)
MLST <- dcast(MLST_results, Strain ~ Marker, formula = "ID")
MLST <- dcast(MLST_results, Test + Strain ~ Marker)
View(MLST)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST_results, Test + Strain ~ Marker)
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST_results, Test + Strain ~ Marker)
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST_results, Strain ~ Marker)
View(MLST)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST_results, Strain ~ Marker, mean)
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
View(MLST)
MLST <- dcast(MLST, Strain ~ Marker)
View(MLST)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, mean)
View(MLST)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
View(MLST)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call", fun.aggregate = ID)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call", fun.aggregate = "Call")
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, fun.aggregate = "Call")
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, fun.aggregate = MLST[3])
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, fun.aggregate = mean)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain + Marker ~ Call)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker ~ Call)
MLST <- MLST_results[,-2]
MLST <- acast(MLST, Strain ~ Marker ~ Call)
View(MLST_results)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST)
MLST <- dcast(MLST, Strain)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Call )
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = Call )
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call" )
View(MLST)
MLST <- MLST_results[,-2]
MLST$id <- row.names(MLST_results)
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call" )
MLST <- MLST_results[,-2]
MLST$id <- row.names(MLST_results)
View(MLST)
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call" )
View(MLST)
MLST <- MLST_results[,-2]
MLST$id <- row.names(MLST_results)
MLST <- dcast(MLST, Strain ~ Marker)
MLST <- MLST_results[,-2]
MLST$id <- row.names(MLST_results)
MLST <- dcast(MLST, Strain+id ~ Marker)
View(MLST)
MLST <- MLST_results[,-2]
MLST$id <- row.names(MLST_results)
MLST <- dcast(MLST, Strain+id ~ Marker, value.var = "Call")
View(MLST)
View(MLST_results)
View(MLST)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
unique(MLST_results[,1])
length(unique(MLST_results[,1]))
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = MLST[,3])
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
duplicated(MLST_results)
which(MLST_results, duplicated(MLST_results == TRUE)
)
a <- duplicated(MLST_results == TRUE)
write.table(a, "duplicated.txt")
MLST <- MLST_results[,-2]
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain ~ Marker + Call, value.var = "Call")
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Marker + Call ~ Strain, value.var = "Call")
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
MLST$id <- row.names(MLST_results)
MLST <- dcast(MLST, id ~ Marker, value.var = "Call")
View(MLST)
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Marker~Call, value.var = "Call")
MLST <- MLST_results[,-2]
MLST <- dcast(MLST, Strain + Marker~Call, value.var = "Call")
MLST <- MLST_results[,-2]
MLST$id <- row.names(MLST_results)
MLST <- dcast(MLST, Strain + id ~ Marker, value.var = "Call")
View(MLST)
View(MLST_results)
MLST <- melt(MLST_results)
View(MLST)
MLST <- dcast(MLST, Strain ~ Marker, value.var = "Call")
View(MLST)
install.packages("reshape")
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
MLST <- cast(MLST, Strain ~ Marker, value.var = "Call")
library(reshape)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- melt(MLST_results)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
MLST <- cast(MLST, Strain ~ Marker, value.var = "Call")
View(MLST)
MLST <- cast(MLST, Strain ~ Marker)
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
View(MLST)
MLST <- cast(MLST, Strain ~ Marker)
View(MLST)
MLST <- MLST_results[,-2]
MLST <- cast(MLST, Strain ~ Marker+Call)
MLST <- cast(MLST, Strain ~ Marker + Call)
View(MLST_results)
MLST <- cast(MLST, Strain + Marker ~Call)
MLST <- dcast(MLST, Strain + Marker ~Call)
View(MLST)
library(reshape2)
our_fasta <- as.data.frame(list.files("294_Cj_Genomes/"))
colnames(our_fasta) <- "list"
all_fasta <- as.data.frame(list.files("all_fasta/"))
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- melt(MLST_results)
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST <- MLST_results[,-2]
View(MLST)
class(MLST)
MLST <- MLST_results[,-4]
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
View(MLST)
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
View(MLST_results)
MLST <- MLST_results[,1:4]
View(MLST)
MLST <- MLST[,-2]
View(MLST)
MLST1 <- dcast(MLST, Strain ~ Marker, value.var = "Call")
View(MLST1)
MLST1 <- dcast(MLST, Strain + Marker ~ Call, value.var = "Call")
View(MLST1)
MLST1 <- dcast(MLST, Marker ~ Strain)
View(MLST1)
MLST_results <- read.table(MLST_results, header = T, sep = ',')
MLST_results <- read.csv("all_fasta/test_out.csv", header = T)
MLST_results <- read.table(MLST_results, header = T, sep = ',')
MLST_results <- read.table("all_fasta/test_out.csv", header = T, sep = ',')
library(reshape)
View(MLST_results)
MLST <- MLST_results[,1:4]
MLST <- MLST[,-2]
MLST1 <- cast(MLST_results,Strain~Marker)
View(MLST1)
MLST1 <- recast(MLST_results,Strain~Marker, id.var = 1, measure.var = 4)
View(MLST1)
MLST_results <- read.table("all_fasta/test_out.csv", header = T, sep = ',')
MLST1 <- recast(MLST_results,Strain~Marker, id.var = 1, measure.var = 4)
MLST1 <- melt(MLST_results, Strain~Marker)
MLST1 <- melt(MLST_results, Strain~Marker, "Call")
MLST1 <- melt(MLST_results)
View(MLST1)
MLST1 <- dcast(MLST1, Strain~Marker)
unique(MLST[,1])
2381*7
MLST1 <- dcast(MLST, Strain~Marker, value.var = "Call", fun.aggregate = NA)
MLST1 <- dcast(MLST, Strain~Marker, value.var = "Call", fill = NA)
MLST1 <- dcast(MLST, Strain~Marker, value.var = "Call", fill = 99)
MLST1 <- dcast(MLST, Strain+Marker ~ Call, value.var = "Call")
View(MLST1)
MLST1 <- dcast(MLST, Strain+Marker, value.var = "Call")
MLST1 <- dcast(MLST, Strain~Marker)
View(MLST1)
View(MLST)
for(i in 1:length(MLST1)){
for(j in 1:length(MLST)){
MLST1[i,1:6] <- MLST[j,3]
}
}
warnings()
MLST_results <- read.csv("all_fasta/test_out.csv")
cast(data=MLST_results, Strain~Marker)
df2 <- cast(data=MLST_results, Strain~Marker)
View(MLST_results)
df2 <- cast(data=MLST_results, Strain~Marker, value = "Call")
test_data <- read.csv("JSON_out.csv")
df2 <- cast(data=test_data, Strain~Marker)
View(df2)
test_data <- read.csv("JSON_out.csv")
df2 <- cast(data=test_data, Strain~Marker)
View(df2)
View(MLST_results)
unique(MLST_results[,5])
length(unique(MLST_results[,1]))
length(unique(MLST_results[,2]))
length(unique(MLST_results[,3]))
unique(MLST_results[,3])
MLST_results <- read.csv("MLST_Results.csv")
View(MLST_results)
MLST_results <- read.table("MLST_Results.csv", sep = '\t')
View(MLST_results)
MLST_results <- read.table("MLST_Results.csv", sep = '\t', header = T)
View(MLST_results)
MLST <- MLST_results
MLST1 <- dcast(MLST, Strain~Marker, value.var = "Call")
View(MLST1)
MLST <- dcast(MLST, Strain~Marker, value.var = "Call")
write.table(MLST, paste("MLST_", length(MLST[,1]), ".txt", sep = '\t')
)
write.table(MLST, paste("MLST_", length(MLST[,1]), ".txt"), sep = '\t')
write.table(MLST, paste("MLST_", length(MLST[,1]), ".txt", sep = ''), sep = '\t')
write.table(MLST, paste("MLST_", length(MLST[,1]), ".txt", sep = ''), sep = '\t', row.names = MLST[,1])
meta <- read.table("pubMLST_metadata.txt", header= T ,sep = '\t', fill = T )
hexMLST2 <- read.csv("hex_analysis/hexMLST2.csv", header = T, row.names="genomes")
meta_1 <- meta[,c(2,4,5,8)]
combined <- merge(meta_1, hexMLST2, by.x = 'isolate', by.y = 'row.names')
which(meta$isolate %in% combined)
which(meta[,2] %in% combined)
which(meta[,2] %in% combined[1])
which(meta[,2] %in% combined[,1])
aa <- which(meta[,2] %in% combined[,1])
aa <- which(meta[,2] !%in% combined[,1])
aa <- !(which(meta[,2] %in% combined[,1]))
aa <- which(meta[,2] ! %in% combined[,1])
aa <- which(!(meta[,2] ! %in% combined[,1]))
aa <- which(!(row.names(hexMLST2) ! %in% combined[,1]))
aa <- which(!(row.names(hexMLST2) %in% combined[,1]))
row.names(hexMLST2)[aa]
can_meta <- read.table("straindata_287.txt")
can_meta <- read.table("straindata_287.txt", sep = '\t')
View(can_meta)
can_meta <- read.table("straindata_287.txt", sep = '\t', header = T)
View(can_meta)
can_meta <- can_meta[,c(1,3,10)]
View(meta_1)
View(can_meta)
can_meta <- read.table("straindata_287.txt", sep = '\t', header = T)
View(can_meta)
can_meta <- can_meta[,c(1,3,10,2)]
View(can_meta)
View(hexMLST2)
View(can_meta)
can_comb <- merge(hexMLST2, can_meta, by.x = 'row.names', by.y = "Strain")
colnames(can_meta) <- colnames(meta_1)
View(can_meta)
can_comb <- merge(hexMLST2, can_meta, by.x = 'row.names', by.y = "isolate")
rbind(can_comb, combined)
View(can_comb)
View(combined)
View(can_comb)
can_comb <- merge(can_meta, hexMLST2, by.y = 'row.names', by.x = "isolate")
rbind(can_comb, combined)
all_comb <- rbind(can_comb, combined)
View(all_comb)
all_comb <- all_comb[, 1:4]
write.table(all_comb, 'phylo_metadata.txt', sep = '\t', row.names = 'isolate')
write.table(all_comb, 'phylo_metadata.txt', sep = '\t', row.names = all_comb$isolate)
aa2 <- which(!(all_comb$isolate %in% row.names(hexMLST2)))
aa2 <- which(!(row.names(hexMLST2) %in% all_comb$isolate))
hex2 <- hexMLST2[-aa2,]
match((row.names(hexMLST2) %in% all_comb$isolate))
match((row.names(hexMLST2), all_comb$isolate))
match(row.names(hexMLST2), all_comb$isolate)
length(match(row.names(hexMLST2), all_comb$isolate))
aa3 <- (match(row.names(hexMLST2), all_comb$isolate))
aa3 <- (match(all_comb$isolate, row.names(hexMLST2)))
all_comb <- all_comb[aa3,]
aa3 <- (match(all_comb$isolate, row.names(hexMLST2)))
aa3 <- (match(row.names(hexMLST2), all_comb$isolate))
aa3 <- as.character(match(row.names(hexMLST2), all_comb$isolate))
aa3 <- (match(row.names(hexMLST2), all_comb$isolate))
all_comb <- all_comb[aa3,]
length(which(all_comb$isolate == row.names(hexMLST2)))
length(which(!(all_comb$isolate == row.names(hexMLST2))))
length(which((all_comb$isolate == row.names(hexMLST2))))
length(which(!(all_comb$isolate == row.names(hexMLST2))))
length(which((all_comb$isolate == row.names(hexMLST2))))
length(which((all_comb$isolate == row.names(hexMLST2))))
length(which(!(all_comb$isolate == row.names(hexMLST2))))
length(which((all_comb$isolate != row.names(hexMLST2))))
length(which((all_comb$isolate !== row.names(hexMLST2))))
unique(all_comb$isolate)
length(unique(all_comb$isolate))
length(unique(row.names(hexMLST2)))
which(!(unique(all_comb$isolate)))
which((unique(all_comb$isolate)))
which(unique(all_comb$isolate))
(unique(all_comb$isolate))
unique(all_comb$isolate)
bb <- unique(all_comb$isolate)
bb <- !(unique(all_comb$isolate))
bb <- (unique(all_comb$isolate))
which(hexMLST2 %in% all_comb)
which(row.names(hexMLST2) %in% all_comb$isolate)
cc <- which(row.names(hexMLST2) %in% all_comb$isolate)
dd <-hexMLST2[cc,]
ee<- row.names(hexMLST2)[cc,]
dd <-hexMLST2[cc,]
ee<- row.names(hexMLST2)[dd,]
ee <- which(all_comb$isolate %in% row.names(hexMLST2))
all_comb2 <- all_comb[ee,]
length(which(all_comb$isolate %in% row.names(hexMLST2)))
all_comb - all_comb2
which(!(all_comb %in% all_comb2))
which(!(all_comb[,1] %in% all_comb2[,1]))
weirdos <- all_comb[,(which(!(all_comb[,1] %in% all_comb2[,1])))]
weirdos <- all_comb[(which(!(all_comb[,1] %in% all_comb2[,1]))),1]
weird_ind <- which(!(all_comb[,1] %in% all_comb2[,1]))
weirdos <- all_comb[weird_ind, 1]
View(all_comb)
weirdos <- all_comb[weird_ind, 2]
weirdos
weirdos <- as.character(all_comb[weird_ind, 2] )
weirdos <- all_comb[weird_ind, ]
View(weirdos)
weirdos <- as.matrix(all_comb[weird_ind, ] )
View(weirdos)
zz<- as.matrix(all_comb)
zz[weird_ind, ]
all_comb[22,]
View(all_comb)
all_comb <- all_comb[,-1]
all_comb[22,]
View(all_comb)
all_comb <- rbind(can_comb, combined)
all_comb <- all_comb[, 1:4]
all_comb <- all_comb[aa3,]
all_comb[1,1]
class(all_comb[1,1])
View(all_comb)
zz <- as.matrix(all_comb[1,1])
zz <- as.matrix(all_comb)
zz[1,1]
class(zz[1,1])
class(zz[1,])
(zz[1,])
(zz[weird_ind,])
(zz[c(weird_ind),])
zz[(weird_ind),]
weird_ind
class(weird_ind)
weird_vec <- as.vector(weird_ind)
class(weird_vec)
zz[36,]
zz[22,]
zz[126,]
zz[158,]
View(zz)
View(can_meta)
View(meta_1)
meta <- read.table("pubMLST_metadata.txt", header= T ,sep = '\t', fill = T )
hexMLST2 <- read.csv("hex_analysis/hexMLST2.csv", header = T, row.names="genomes")
meta_1 <- meta[,c(2,4,5,8)]
combined <- merge(meta_1, hexMLST2, by.x = 'isolate', by.y = 'row.names')
aa <- which(!(row.names(hexMLST2) %in% combined[,1]))
row.names(hexMLST2)[aa]
can_meta <- read.table("straindata_287.txt", sep = '\t', header = T)
can_meta <- can_meta[,c(1,3,10,2)]
colnames(can_meta) <- colnames(meta_1)
all_meta <- rbind(can_meta, meta_1)
which(row.names(hexMLST2) %in% all_meta$isolate)
length(which(row.names(hexMLST2) %in% all_meta$isolate))
matching_rows <- which(row.names(hexMLST2) %in% all_meta$isolate)
all_meta[matching_rows,]
meta_data <- all_meta[matching_rows,]
which(row.names(hexMLST2) %in% meta_data$isolate)
length(which(row.names(hexMLST2) %in% meta_data$isolate))
length(which(!(row.names(hexMLST2) %in% meta_data$isolate)))
2087+292
View(meta_data)
View(hexMLST2)
meta_data <- all_meta[matching_rows,]
length(which((row.names(hexMLST2) %in% meta_data$isolate)))
length(which(!(row.names(hexMLST2) %in% meta_data$isolate)))
matching_rows <- which(row.names(hexMLST2) %in% all_meta$isolate)
matching_rows <- which(all_meta$isolate %in% row.names(hexMLST2))
unique(all_meta)
length(unique(all_meta))
length(unique(all_meta[,1]))
length(unique(meta[,1]))
length(unique(can_meta[,1]))
length(unique(meta_1[,1]))
View(meta_1)
View(meta)
length(unique(meta[,1]))
length(unique(meta[,2]))
287+30910
meta_1 <- meta_1[!duplicated(meta_1), ]
all_meta <- rbind(can_meta, meta_1)
matching_rows <- which(all_meta$isolate %in% row.names(hexMLST2))
meta_data <- all_meta[matching_rows, ]
length(which(!(row.names(hexMLST2) %in% meta_data$isolate)))
get_rid <- (which(!(row.names(hexMLST2) %in% meta_data$isolate)))
fixed_hex <- hexMLST2[-get_rid,]
aa <- which(meta_data$isolate %in% row.names(fixed_hex))
View(fixed_hex)
length(unique(meta_data$isolate))
meta_data <- meta_data[!duplicated(meta_data),]
meta_data <- meta_data[!duplicated(meta_data[,1]),]
length(which(meta_data$isolate %in% row.names(fixed_hex)))
write.table(fixed_hex, "fixed.hex.txt", sep = '\t')
write.table(meta_data, "fixed_metadata.txt", sep = '\t')
View(meta_data)
row.names(meta_data) <- meta_data$isolate
write.table(meta_data, "fixed_metadata.txt", sep = '\t')
meta_data1 <- meta_data[,-1]
View(meta_data1)
write.table(meta_data, "fixed_metadata.txt", sep = '\t')
fixed_hex$st <- 1:length(fixed_hex)
fixed_hex$st <- NA
fixed_hex$st <- 1:length(fixed_hex$st)
View(fixed_hex)
View(fixed_hex$st)
write.table(fixed_hex, "fixed.hex.txt", sep = '\t')
